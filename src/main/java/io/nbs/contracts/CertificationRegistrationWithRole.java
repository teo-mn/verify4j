package io.nbs.contracts;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Bytes32;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tuples.generated.Tuple12;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.4.2.
 */
@SuppressWarnings("rawtypes")
public class CertificationRegistrationWithRole extends Contract {
    public static final String BINARY = "0x6080604052600436106101725760003560e01c806208ddac1461017757806301ffc9a71461019957806310b40f85146101ce5780631266a630146101ee578063148f90bb14610226578063248a9ca314610253578063268ee59c146102815780632f2ff15d146102ae578063337d08ff146102ce57806336568abe146102ee57806338139af51461030e5780633c457c7a1461032e578063485cc9551461034e5780634ad825a11461036e5780634f7b3c7d1461038e57806357344e6f146103ae57806364e9eb44146103ce578063715018a6146103ee57806382aefa24146104035780638da5cb5b1461042557806391d148541461043a5780639bda9c2d1461045a578063a217fddf1461047a578063af640d0f1461048f578063bd38e921146104a5578063c941cc57146104c5578063d547741f146104d8578063e94a97b6146104f8578063f0d0fa3814610525578063f2fde38b14610545578063fc6b38ad14610565578063fef03da314610585575b600080fd5b34801561018357600080fd5b506101976101923660046138c7565b6105b2565b005b3480156101a557600080fd5b506101b96101b436600461399c565b610632565b60405190151581526020015b60405180910390f35b3480156101da57600080fd5b506101976101e9366004613ac9565b610669565b3480156101fa57600080fd5b5061020e610209366004613960565b610a60565b6040516101c59c9b9a99989796959493929190614289565b34801561023257600080fd5b5060ca54610246906001600160a01b031681565b6040516101c59190613ec4565b34801561025f57600080fd5b5061027361026e366004613960565b610dfb565b6040519081526020016101c5565b34801561028d57600080fd5b506102a161029c3660046139c4565b610e10565b6040516101c5919061408d565b3480156102ba57600080fd5b506101976102c9366004613978565b611203565b3480156102da57600080fd5b506101976102e93660046138c7565b611220565b3480156102fa57600080fd5b50610197610309366004613978565b6112e1565b34801561031a57600080fd5b506102a1610329366004613960565b61135f565b34801561033a57600080fd5b506102736103493660046139f6565b6113a0565b34801561035a57600080fd5b506101976103693660046138e3565b6114bc565b34801561037a57600080fd5b50610273610389366004613b29565b6115de565b34801561039a57600080fd5b506102a16103a93660046139c4565b611615565b3480156103ba57600080fd5b506102736103c93660046138c7565b611b21565b3480156103da57600080fd5b5060ce54610246906001600160a01b031681565b3480156103fa57600080fd5b50610197611b2c565b34801561040f57600080fd5b506102736000805160206144fb83398151915281565b34801561043157600080fd5b50610246611b67565b34801561044657600080fd5b506101b9610455366004613978565b611b76565b34801561046657600080fd5b5061020e6104753660046139c4565b611ba1565b34801561048657600080fd5b50610273600081565b34801561049b57600080fd5b5061027360c95481565b3480156104b157600080fd5b506101976104c0366004613ac9565b611bce565b6101976104d336600461391b565b6123ce565b3480156104e457600080fd5b506101976104f3366004613978565b612442565b34801561050457600080fd5b506105186105133660046139c4565b61245f565b6040516101c59190613f20565b34801561053157600080fd5b50610197610540366004613d2b565b612504565b34801561055157600080fd5b506101976105603660046138c7565b61253f565b34801561057157600080fd5b5061020e6105803660046139c4565b6125df565b34801561059157600080fd5b506105a56105a03660046138c7565b61260c565b6040516101c591906141a1565b336105bb611b67565b6001600160a01b0316146105ea5760405162461bcd60e51b81526004016105e190613fe9565b60405180910390fd5b6001600160a01b0381166106105760405162461bcd60e51b81526004016105e190613f5e565b60ca80546001600160a01b0319166001600160a01b0392909216919091179055565b60006001600160e01b03198216637965db0b60e01b148061066357506301ffc9a760e01b6001600160e01b03198316145b92915050565b600060cb8360405161067b9190613d9e565b908152602001604051809103902060405180610180016040529081600082015481526020016001820180546106af90614449565b80601f01602080910402602001604051908101604052809291908181526020018280546106db90614449565b80156107285780601f106106fd57610100808354040283529160200191610728565b820191906000526020600020905b81548152906001019060200180831161070b57829003601f168201915b5050505050815260200160028201805461074190614449565b80601f016020809104026020016040519081016040528092919081815260200182805461076d90614449565b80156107ba5780601f1061078f576101008083540402835291602001916107ba565b820191906000526020600020905b81548152906001019060200180831161079d57829003601f168201915b505050918352505060038201546001600160a01b031660208201526004820154604082015260058201546060820152600682015460ff161515608082015260078201805460a09092019161080d90614449565b80601f016020809104026020016040519081016040528092919081815260200182805461083990614449565b80156108865780601f1061085b57610100808354040283529160200191610886565b820191906000526020600020905b81548152906001019060200180831161086957829003601f168201915b5050505050815260200160088201805461089f90614449565b80601f01602080910402602001604051908101604052809291908181526020018280546108cb90614449565b80156109185780601f106108ed57610100808354040283529160200191610918565b820191906000526020600020905b8154815290600101906020018083116108fb57829003601f168201915b5050505050815260200160098201805461093190614449565b80601f016020809104026020016040519081016040528092919081815260200182805461095d90614449565b80156109aa5780601f1061097f576101008083540402835291602001916109aa565b820191906000526020600020905b81548152906001019060200180831161098d57829003601f168201915b50505050508152602001600a8201548152602001600b820180546109cd90614449565b80601f01602080910402602001604051908101604052809291908181526020018280546109f990614449565b8015610a465780601f10610a1b57610100808354040283529160200191610a46565b820191906000526020600020905b815481529060010190602001808311610a2957829003601f168201915b5050505050815250509050610a5b81836126fa565b505050565b60cc6020526000908152604090208054600182018054919291610a8290614449565b80601f0160208091040260200160405190810160405280929190818152602001828054610aae90614449565b8015610afb5780601f10610ad057610100808354040283529160200191610afb565b820191906000526020600020905b815481529060010190602001808311610ade57829003601f168201915b505050505090806002018054610b1090614449565b80601f0160208091040260200160405190810160405280929190818152602001828054610b3c90614449565b8015610b895780601f10610b5e57610100808354040283529160200191610b89565b820191906000526020600020905b815481529060010190602001808311610b6c57829003601f168201915b505050600384015460048501546005860154600687015460078801805497986001600160a01b039095169793965091945060ff169291610bc890614449565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf490614449565b8015610c415780601f10610c1657610100808354040283529160200191610c41565b820191906000526020600020905b815481529060010190602001808311610c2457829003601f168201915b505050505090806008018054610c5690614449565b80601f0160208091040260200160405190810160405280929190818152602001828054610c8290614449565b8015610ccf5780601f10610ca457610100808354040283529160200191610ccf565b820191906000526020600020905b815481529060010190602001808311610cb257829003601f168201915b505050505090806009018054610ce490614449565b80601f0160208091040260200160405190810160405280929190818152602001828054610d1090614449565b8015610d5d5780601f10610d3257610100808354040283529160200191610d5d565b820191906000526020600020905b815481529060010190602001808311610d4057829003601f168201915b50505050509080600a01549080600b018054610d7890614449565b80601f0160208091040260200160405190810160405280929190818152602001828054610da490614449565b8015610df15780601f10610dc657610100808354040283529160200191610df1565b820191906000526020600020905b815481529060010190602001808311610dd457829003601f168201915b505050505090508c565b60009081526097602052604090206001015490565b610e18613674565b60cd82604051610e289190613d9e565b90815260200160405180910390206040518061018001604052908160008201548152602001600182018054610e5c90614449565b80601f0160208091040260200160405190810160405280929190818152602001828054610e8890614449565b8015610ed55780601f10610eaa57610100808354040283529160200191610ed5565b820191906000526020600020905b815481529060010190602001808311610eb857829003601f168201915b50505050508152602001600282018054610eee90614449565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1a90614449565b8015610f675780601f10610f3c57610100808354040283529160200191610f67565b820191906000526020600020905b815481529060010190602001808311610f4a57829003601f168201915b505050918352505060038201546001600160a01b031660208201526004820154604082015260058201546060820152600682015460ff161515608082015260078201805460a090920191610fba90614449565b80601f0160208091040260200160405190810160405280929190818152602001828054610fe690614449565b80156110335780601f1061100857610100808354040283529160200191611033565b820191906000526020600020905b81548152906001019060200180831161101657829003601f168201915b5050505050815260200160088201805461104c90614449565b80601f016020809104026020016040519081016040528092919081815260200182805461107890614449565b80156110c55780601f1061109a576101008083540402835291602001916110c5565b820191906000526020600020905b8154815290600101906020018083116110a857829003601f168201915b505050505081526020016009820180546110de90614449565b80601f016020809104026020016040519081016040528092919081815260200182805461110a90614449565b80156111575780601f1061112c57610100808354040283529160200191611157565b820191906000526020600020905b81548152906001019060200180831161113a57829003601f168201915b50505050508152602001600a8201548152602001600b8201805461117a90614449565b80601f01602080910402602001604051908101604052809291908181526020018280546111a690614449565b80156111f35780601f106111c8576101008083540402835291602001916111f3565b820191906000526020600020905b8154815290600101906020018083116111d657829003601f168201915b5050505050815250509050919050565b61120c82610dfb565b6112168133612be4565b610a5b8383612c48565b33611229611b67565b6001600160a01b03161461124f5760405162461bcd60e51b81526004016105e190613fe9565b6001600160a01b0381166112755760405162461bcd60e51b81526004016105e190613f5e565b60ce80546001600160a01b038381166001600160a01b0319831681179093556040805191909216808252602082019390935242918101919091527fdae3b112c864b0ee8d0876274b1b9169cdfea7a4f4daab1d67a622b520758432906060015b60405180910390a15050565b6001600160a01b03811633146113515760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016105e1565b61135b8282612cce565b5050565b611367613674565b60cc60008381526020019081526020016000206040518061018001604052908160008201548152602001600182018054610e5c90614449565b60006000805160206144fb8339815191526113bb8133612be4565b60006113cb898989898989612d35565b905060005b88518160ff1610156114af5760006114118a8360ff168151811061140457634e487b7160e01b600052603260045260246000fd5b6020026020010151611615565b90508060c001518061142257508051155b61143e5760405162461bcd60e51b81526004016105e190613f87565b8a60cf8b8460ff168151811061146457634e487b7160e01b600052603260045260246000fd5b60200260200101516040516114799190613d9e565b9081526020016040518091039020908051906020019061149a9291906136e0565b505080806114a790614499565b9150506113d0565b5098975050505050505050565b600054610100900460ff166114d75760005460ff16156114db565b303b155b61153e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105e1565b600054610100900460ff16158015611560576000805461ffff19166101011790555b600060c95561156d6132af565b6115756132de565b611580600033612c48565b6115986000805160206144fb83398151915233612c48565b60ca80546001600160a01b038086166001600160a01b03199283161790925560ce8054928516929091169190911790558015610a5b576000805461ff0019169055505050565b60006000805160206144fb8339815191526115f98133612be4565b6060611609888289898989612d35565b98975050505050505050565b61161d613674565b600060cf8360405161162f9190613d9e565b9081526020016040518091039020805461164890614449565b80601f016020809104026020016040519081016040528092919081815260200182805461167490614449565b80156116c15780601f10611696576101008083540402835291602001916116c1565b820191906000526020600020905b8154815290600101906020018083116116a457829003601f168201915b5050604080516000815260208101808352815190209596506116e99450869350019050613d9e565b604051602081830303815290604052805190602001201415611af15760cb836040516117159190613d9e565b9081526020016040518091039020604051806101800160405290816000820154815260200160018201805461174990614449565b80601f016020809104026020016040519081016040528092919081815260200182805461177590614449565b80156117c25780601f10611797576101008083540402835291602001916117c2565b820191906000526020600020905b8154815290600101906020018083116117a557829003601f168201915b505050505081526020016002820180546117db90614449565b80601f016020809104026020016040519081016040528092919081815260200182805461180790614449565b80156118545780601f1061182957610100808354040283529160200191611854565b820191906000526020600020905b81548152906001019060200180831161183757829003601f168201915b505050918352505060038201546001600160a01b031660208201526004820154604082015260058201546060820152600682015460ff161515608082015260078201805460a0909201916118a790614449565b80601f01602080910402602001604051908101604052809291908181526020018280546118d390614449565b80156119205780601f106118f557610100808354040283529160200191611920565b820191906000526020600020905b81548152906001019060200180831161190357829003601f168201915b5050505050815260200160088201805461193990614449565b80601f016020809104026020016040519081016040528092919081815260200182805461196590614449565b80156119b25780601f10611987576101008083540402835291602001916119b2565b820191906000526020600020905b81548152906001019060200180831161199557829003601f168201915b505050505081526020016009820180546119cb90614449565b80601f01602080910402602001604051908101604052809291908181526020018280546119f790614449565b8015611a445780601f10611a1957610100808354040283529160200191611a44565b820191906000526020600020905b815481529060010190602001808311611a2757829003601f168201915b50505050508152602001600a8201548152602001600b82018054611a6790614449565b80601f0160208091040260200160405190810160405280929190818152602001828054611a9390614449565b8015611ae05780601f10611ab557610100808354040283529160200191611ae0565b820191906000526020600020905b815481529060010190602001808311611ac357829003601f168201915b505050505081525050915050919050565b60cb60cf84604051611b039190613d9e565b90815260405190819003602001812061171591613dba565b50919050565b600061066382613305565b33611b35611b67565b6001600160a01b031614611b5b5760405162461bcd60e51b81526004016105e190613fe9565b611b656000613388565b565b6033546001600160a01b031690565b60009182526097602090815260408084206001600160a01b0393909316845291905290205460ff1690565b805160208183018101805160cd8252928201919093012091528054600182018054919291610a8290614449565b600060cb83604051611be09190613d9e565b90815260200160405180910390206040518061018001604052908160008201548152602001600182018054611c1490614449565b80601f0160208091040260200160405190810160405280929190818152602001828054611c4090614449565b8015611c8d5780601f10611c6257610100808354040283529160200191611c8d565b820191906000526020600020905b815481529060010190602001808311611c7057829003601f168201915b50505050508152602001600282018054611ca690614449565b80601f0160208091040260200160405190810160405280929190818152602001828054611cd290614449565b8015611d1f5780601f10611cf457610100808354040283529160200191611d1f565b820191906000526020600020905b815481529060010190602001808311611d0257829003601f168201915b505050918352505060038201546001600160a01b031660208201526004820154604082015260058201546060820152600682015460ff161515608082015260078201805460a090920191611d7290614449565b80601f0160208091040260200160405190810160405280929190818152602001828054611d9e90614449565b8015611deb5780601f10611dc057610100808354040283529160200191611deb565b820191906000526020600020905b815481529060010190602001808311611dce57829003601f168201915b50505050508152602001600882018054611e0490614449565b80601f0160208091040260200160405190810160405280929190818152602001828054611e3090614449565b8015611e7d5780601f10611e5257610100808354040283529160200191611e7d565b820191906000526020600020905b815481529060010190602001808311611e6057829003601f168201915b50505050508152602001600982018054611e9690614449565b80601f0160208091040260200160405190810160405280929190818152602001828054611ec290614449565b8015611f0f5780601f10611ee457610100808354040283529160200191611f0f565b820191906000526020600020905b815481529060010190602001808311611ef257829003601f168201915b50505050508152602001600a8201548152602001600b82018054611f3290614449565b80601f0160208091040260200160405190810160405280929190818152602001828054611f5e90614449565b8015611fab5780601f10611f8057610100808354040283529160200191611fab565b820191906000526020600020905b815481529060010190602001808311611f8e57829003601f168201915b505050505081525050905060008160000151118015611fcc57508060c00151155b6120045760405162461bcd60e51b8152602060048201526009602482015268139bdd08199bdd5b9960ba1b60448201526064016105e1565b60608101516001600160a01b031633146120305760405162461bcd60e51b81526004016105e190613fbe565b818161016001819052508060cb8460405161204b9190613d9e565b908152602001604051809103902060008201518160000155602082015181600101908051906020019061207f9291906136e0565b506040820151805161209b9160028401916020909101906136e0565b5060608201516003820180546001600160a01b0319166001600160a01b039092169190911790556080820151600482015560a0820151600582015560c082015160068201805460ff191691151591909117905560e082015180516121099160078401916020909101906136e0565b5061010082015180516121269160088401916020909101906136e0565b5061012082015180516121439160098401916020909101906136e0565b50610140820151600a820155610160820151805161216b91600b8401916020909101906136e0565b50508151600090815260cc602090815260409091208351815581840151805185945091926121a1926001850192909101906136e0565b50604082015180516121bd9160028401916020909101906136e0565b5060608201516003820180546001600160a01b0319166001600160a01b039092169190911790556080820151600482015560a0820151600582015560c082015160068201805460ff191691151591909117905560e0820151805161222b9160078401916020909101906136e0565b5061010082015180516122489160088401916020909101906136e0565b5061012082015180516122659160098401916020909101906136e0565b50610140820151600a820155610160820151805161228d91600b8401916020909101906136e0565b509050508060cd82602001516040516122a69190613d9e565b90815260200160405180910390206000820151816000015560208201518160010190805190602001906122da9291906136e0565b50604082015180516122f69160028401916020909101906136e0565b5060608201516003820180546001600160a01b0319166001600160a01b039092169190911790556080820151600482015560a0820151600582015560c082015160068201805460ff191691151591909117905560e082015180516123649160078401916020909101906136e0565b5061010082015180516123819160088401916020909101906136e0565b50610120820151805161239e9160098401916020909101906136e0565b50610140820151600a82015561016082015180516123c691600b8401916020909101906136e0565b505050505050565b336123d7611b67565b6001600160a01b0316146123fd5760405162461bcd60e51b81526004016105e190613fe9565b801561241b5760405162461bcd60e51b81526004016105e19061401e565b6001600160a01b0382161561135b5760405162461bcd60e51b81526004016105e19061401e565b61244b82610dfb565b6124558133612be4565b610a5b8383612cce565b805160208183018101805160cf825292820191909301209152805461248390614449565b80601f01602080910402602001604051908101604052809291908181526020018280546124af90614449565b80156124fc5780601f106124d1576101008083540402835291602001916124fc565b820191906000526020600020905b8154815290600101906020018083116124df57829003601f168201915b505050505081565b600060cc600084815260200190815260200160002060405180610180016040529081600082015481526020016001820180546106af90614449565b33612548611b67565b6001600160a01b03161461256e5760405162461bcd60e51b81526004016105e190613fe9565b6001600160a01b0381166125d35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105e1565b6125dc81613388565b50565b805160208183018101805160cb8252928201919093012091528054600182018054919291610a8290614449565b61266d604051806101400160405280600081526020016060815260200160608152602001606081526020016060815260200160006001600160a01b031681526020016060815260200160001515815260200160008152602001600081525090565b60ce5460405163fef03da360e01b81526001600160a01b0390911690819063fef03da39061269f908690600401613ec4565b60006040518083038186803b1580156126b757600080fd5b505afa1580156126cb573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526126f39190810190613bda565b9392505050565b81516127425760405162461bcd60e51b815260206004820152601760248201527610d95c9d1a599a58d85d1a5bdb881b9bdd08199bdd5b99604a1b60448201526064016105e1565b81606001516001600160a01b0316336001600160a01b0316146127775760405162461bcd60e51b81526004016105e190613fbe565b60c0820151156127c95760405162461bcd60e51b815260206004820152601d60248201527f43657274696669636174696f6e20616c7265616479207265766f6b656400000060448201526064016105e1565b60006127d433613305565b116127f15760405162461bcd60e51b81526004016105e190613f33565b6127fa336133da565b50600160c08301526101208201819052426101408301526040808301519051839160cb916128289190613d9e565b908152602001604051809103902060008201518160000155602082015181600101908051906020019061285c9291906136e0565b50604082015180516128789160028401916020909101906136e0565b5060608201516003820180546001600160a01b0319166001600160a01b039092169190911790556080820151600482015560a0820151600582015560c082015160068201805460ff191691151591909117905560e082015180516128e69160078401916020909101906136e0565b5061010082015180516129039160088401916020909101906136e0565b5061012082015180516129209160098401916020909101906136e0565b50610140820151600a820155610160820151805161294891600b8401916020909101906136e0565b50508251600090815260cc6020908152604090912084518155818501518051869450919261297e926001850192909101906136e0565b506040820151805161299a9160028401916020909101906136e0565b5060608201516003820180546001600160a01b0319166001600160a01b039092169190911790556080820151600482015560a0820151600582015560c082015160068201805460ff191691151591909117905560e08201518051612a089160078401916020909101906136e0565b506101008201518051612a259160088401916020909101906136e0565b506101208201518051612a429160098401916020909101906136e0565b50610140820151600a8201556101608201518051612a6a91600b8401916020909101906136e0565b509050508160cd8360200151604051612a839190613d9e565b9081526020016040518091039020600082015181600001556020820151816001019080519060200190612ab79291906136e0565b5060408201518051612ad39160028401916020909101906136e0565b5060608201516003820180546001600160a01b0319166001600160a01b039092169190911790556080820151600482015560a0820151600582015560c082015160068201805460ff191691151591909117905560e08201518051612b419160078401916020909101906136e0565b506101008201518051612b5e9160088401916020909101906136e0565b506101208201518051612b7b9160098401916020909101906136e0565b50610140820151600a8201556101608201518051612ba391600b8401916020909101906136e0565b509050507f4dde277385dd7e9b9fd1737ec57835263d07c56a1c3164dfade41ae8fe6fd9c03383604001518460200151426040516112d59493929190613ed8565b612bee8282611b76565b61135b57612c06816001600160a01b03166014613463565b612c11836020613463565b604051602001612c22929190613e55565b60408051601f198184030181529082905262461bcd60e51b82526105e191600401613f20565b612c528282611b76565b61135b5760008281526097602090815260408083206001600160a01b03851684529091529020805460ff19166001179055612c8a3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b612cd88282611b76565b1561135b5760008281526097602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600080612d4188611615565b90508060c0015180612d5257508051155b612d6e5760405162461bcd60e51b81526004016105e190613f87565b6000612d7933613305565b11612d965760405162461bcd60e51b81526004016105e190613f33565b841580612da257508442105b612dea5760405162461bcd60e51b8152602060048201526019602482015278115e1c1a5c994819185d194818d85b89dd081899481c185cdd603a1b60448201526064016105e1565b841580612e045750612e0142640757b12c006143cb565b85105b612e635760405162461bcd60e51b815260206004820152602a60248201527f45787069726520646174652074696d657374616d702073686f756c6420626520604482015269696e207365636f6e647360b01b60648201526084016105e1565b612e6c336133da565b5060c960008154612e7c9061447e565b91829055508152602080820187905260408083018a9052336060840152608083018790524260a0840152600060c0840181905260e0840187905261010084018690528151928301825280835261012084019290925261014083019190915251819060cb90612eeb908b90613d9e565b9081526020016040518091039020600082015181600001556020820151816001019080519060200190612f1f9291906136e0565b5060408201518051612f3b9160028401916020909101906136e0565b5060608201516003820180546001600160a01b0319166001600160a01b039092169190911790556080820151600482015560a0820151600582015560c082015160068201805460ff191691151591909117905560e08201518051612fa99160078401916020909101906136e0565b506101008201518051612fc69160088401916020909101906136e0565b506101208201518051612fe39160098401916020909101906136e0565b50610140820151600a820155610160820151805161300b91600b8401916020909101906136e0565b50508151600090815260cc60209081526040909120835181558184015180518594509192613041926001850192909101906136e0565b506040820151805161305d9160028401916020909101906136e0565b5060608201516003820180546001600160a01b0319166001600160a01b039092169190911790556080820151600482015560a0820151600582015560c082015160068201805460ff191691151591909117905560e082015180516130cb9160078401916020909101906136e0565b5061010082015180516130e89160088401916020909101906136e0565b5061012082015180516131059160098401916020909101906136e0565b50610140820151600a820155610160820151805161312d91600b8401916020909101906136e0565b509050508060cd876040516131429190613d9e565b90815260200160405180910390206000820151816000015560208201518160010190805190602001906131769291906136e0565b50604082015180516131929160028401916020909101906136e0565b5060608201516003820180546001600160a01b0319166001600160a01b039092169190911790556080820151600482015560a0820151600582015560c082015160068201805460ff191691151591909117905560e082015180516132009160078401916020909101906136e0565b50610100820151805161321d9160088401916020909101906136e0565b50610120820151805161323a9160098401916020909101906136e0565b50610140820151600a820155610160820151805161326291600b8401916020909101906136e0565b509050507ff9704db462a985da8f6c1eb5ce02ebdb96015bb3d2cdd749d5d82f9e14ca47db3389884260405161329b9493929190613ed8565b60405180910390a151979650505050505050565b600054610100900460ff166132d65760405162461bcd60e51b81526004016105e190614042565b611b65613644565b600054610100900460ff16611b655760405162461bcd60e51b81526004016105e190614042565b60ca546040516370a0823160e01b81526000916001600160a01b03169081906370a0823190613338908690600401613ec4565b60206040518083038186803b15801561335057600080fd5b505afa158015613364573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126f39190613d13565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60ca54604051632770a7eb60e21b81526001600160a01b0383811660048301526001602483015260009216908190639dc29fac90604401602060405180830381600087803b15801561342b57600080fd5b505af115801561343f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126f39190613946565b606060006134728360026143e3565b61347d9060026143cb565b6001600160401b038111156134a257634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f1916602001820160405280156134cc576020820181803683370190505b509050600360fc1b816000815181106134f557634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061353257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060006135568460026143e3565b6135619060016143cb565b90505b60018111156135f5576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106135a357634e487b7160e01b600052603260045260246000fd5b1a60f81b8282815181106135c757634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a90535060049490941c936135ee81614432565b9050613564565b5083156126f35760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016105e1565b600054610100900460ff1661366b5760405162461bcd60e51b81526004016105e190614042565b611b6533613388565b60405180610180016040528060008152602001606081526020016060815260200160006001600160a01b03168152602001600081526020016000815260200160001515815260200160608152602001606081526020016060815260200160008152602001606081525090565b8280546136ec90614449565b90600052602060002090601f01602090048101928261370e5760008555613754565b82601f1061372757805160ff1916838001178555613754565b82800160010185558215613754579182015b82811115613754578251825591602001919060010190613739565b50613760929150613764565b5090565b5b808211156137605760008155600101613765565b8051613784816144e5565b919050565b600082601f830112613799578081fd5b813560206001600160401b03808311156137b5576137b56144cf565b8260051b6137c4838201614374565b8481528381019087850183890186018a10156137de578788fd5b8793505b868410156114af578035858111156137f8578889fd5b6138068b88838d010161382b565b845250600193909301929185019185016137e2565b8051801515811461378457600080fd5b600082601f83011261383b578081fd5b813561384e613849826143a4565b614374565b818152846020838601011115613862578283fd5b816020850160208301379081016020019190915292915050565b600082601f83011261388c578081fd5b815161389a613849826143a4565b8181528460208386010111156138ae578283fd5b6138bf826020830160208701614402565b949350505050565b6000602082840312156138d8578081fd5b81356126f3816144e5565b600080604083850312156138f5578081fd5b8235613900816144e5565b91506020830135613910816144e5565b809150509250929050565b6000806040838503121561392d578182fd5b8235613938816144e5565b946020939093013593505050565b600060208284031215613957578081fd5b6126f38261381b565b600060208284031215613971578081fd5b5035919050565b6000806040838503121561398a578182fd5b823591506020830135613910816144e5565b6000602082840312156139ad578081fd5b81356001600160e01b0319811681146126f3578182fd5b6000602082840312156139d5578081fd5b81356001600160401b038111156139ea578182fd5b6138bf8482850161382b565b60008060008060008060c08789031215613a0e578182fd5b86356001600160401b0380821115613a24578384fd5b613a308a838b0161382b565b97506020890135915080821115613a45578384fd5b613a518a838b01613789565b96506040890135915080821115613a66578384fd5b613a728a838b0161382b565b9550606089013594506080890135915080821115613a8e578384fd5b613a9a8a838b0161382b565b935060a0890135915080821115613aaf578283fd5b50613abc89828a0161382b565b9150509295509295509295565b60008060408385031215613adb578182fd5b82356001600160401b0380821115613af1578384fd5b613afd8683870161382b565b93506020850135915080821115613b12578283fd5b50613b1f8582860161382b565b9150509250929050565b600080600080600060a08688031215613b40578283fd5b85356001600160401b0380821115613b56578485fd5b613b6289838a0161382b565b96506020880135915080821115613b77578485fd5b613b8389838a0161382b565b9550604088013594506060880135915080821115613b9f578283fd5b613bab89838a0161382b565b93506080880135915080821115613bc0578283fd5b50613bcd8882890161382b565b9150509295509295909350565b600060208284031215613beb578081fd5b81516001600160401b0380821115613c01578283fd5b908301906101408286031215613c15578283fd5b613c1d61434b565b82518152602083015182811115613c32578485fd5b613c3e8782860161387c565b602083015250604083015182811115613c55578485fd5b613c618782860161387c565b604083015250606083015182811115613c78578485fd5b613c848782860161387c565b606083015250608083015182811115613c9b578485fd5b613ca78782860161387c565b608083015250613cb960a08401613779565b60a082015260c083015182811115613ccf578485fd5b613cdb8782860161387c565b60c083015250613ced60e0840161381b565b60e082015261010083810151908201526101209283015192810192909252509392505050565b600060208284031215613d24578081fd5b5051919050565b60008060408385031215613d3d578182fd5b8235915060208301356001600160401b03811115613d59578182fd5b613b1f8582860161382b565b6001600160a01b03169052565b60008151808452613d8a816020860160208601614402565b601f01601f19169290920160200192915050565b60008251613db0818460208701614402565b9190910192915050565b600080835482600182811c915080831680613dd657607f831692505b6020808410821415613df657634e487b7160e01b87526022600452602487fd5b818015613e0a5760018114613e1b57613e47565b60ff19861689528489019650613e47565b60008a815260209020885b86811015613e3f5781548b820152908501908301613e26565b505084890196505b509498975050505050505050565b76020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b815260008351613e87816017850160208801614402565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351613eb8816028840160208801614402565b01602801949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b0385168152608060208201819052600090613efc90830186613d72565b8281036040840152613f0e8186613d72565b91505082606083015295945050505050565b6020815260006126f36020830184613d72565b602080825260119082015270139bdd08195b9bdd59da0818dc99591a5d607a1b604082015260600190565b6020808252600f908201526e496e76616c6964206164647265737360881b604082015260600190565b6020808252601e908201527f436572746966696361746520616c726561647920726567697374657265640000604082015260600190565b60208082526011908201527014195c9b5a5cdcda5bdb8819195b9a5959607a1b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252600a908201526911195c1c9958d85d195960b21b604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6020815281516020820152600060208301516101808060408501526140b66101a0850183613d72565b91506040850151601f19808685030160608701526140d48483613d72565b9350606087015191506140ea6080870183613d65565b608087015160a087015260a087015160c087015260c0870151915061411360e087018315159052565b60e087015191506101008187860301818801526141308584613d72565b94508088015192505061012081878603018188015261414f8584613d72565b94508088015192505061014081878603018188015261416e8584613d72565b908801516101608881019190915288015187820390920184880152935090506141978382613d72565b9695505050505050565b6020815281516020820152600060208301516101408060408501526141ca610160850183613d72565b91506040850151601f19808685030160608701526141e88483613d72565b935060608701519150808685030160808701526142058483613d72565b935060808701519150808685030160a08701526142228483613d72565b935060a0870151915061423860c0870183613d65565b60c08701519150808685030160e0870152506142548382613d72565b92505060e085015161010061426c8187018315159052565b860151610120868101919091529095015193019290925250919050565b60006101808e83528060208401526142a38184018f613d72565b905082810360408401526142b7818e613d72565b90506142c6606084018d613d65565b8a60808401528960a08401526142e060c084018a15159052565b82810360e08401526142f28189613d72565b90508281036101008401526143078188613d72565b905082810361012084015261431c8187613d72565b9050846101408401528281036101608401526143388185613d72565b9f9e505050505050505050505050505050565b60405161014081016001600160401b038111828210171561436e5761436e6144cf565b60405290565b604051601f8201601f191681016001600160401b038111828210171561439c5761439c6144cf565b604052919050565b60006001600160401b038211156143bd576143bd6144cf565b50601f01601f191660200190565b600082198211156143de576143de6144b9565b500190565b60008160001904831182151516156143fd576143fd6144b9565b500290565b60005b8381101561441d578181015183820152602001614405565b8381111561442c576000848401525b50505050565b600081614441576144416144b9565b506000190190565b600181811c9082168061445d57607f821691505b60208210811415611b1b57634e487b7160e01b600052602260045260246000fd5b6000600019821415614492576144926144b9565b5060010190565b600060ff821660ff8114156144b0576144b06144b9565b60010192915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146125dc57600080fdfe114e74f6ea3bd819998f78687bfcb11b140da08e9b7d222fa9c1f1ba1f2aa122a26469706673582212208ad52502cd374162c548936d5ae7553a26de2820c488d5018860e5b03008f2cd64736f6c63430008040033";

    public static final String FUNC_DEFAULT_ADMIN_ROLE = "DEFAULT_ADMIN_ROLE";

    public static final String FUNC_ISSUER_ROLE = "ISSUER_ROLE";

    public static final String FUNC_addCertification = "addCertification";

    public static final String FUNC_ADDTRANSACTIONID = "addTransactionId";

    public static final String FUNC_CERTIFICATIONS = "certifications";

    public static final String FUNC_CHARGECREDIT = "chargeCredit";

    public static final String FUNC_CREDITADDRESS = "creditAddress";

    public static final String FUNC_GETCERTIFICATION = "getCertification";

    public static final String FUNC_GETCERTIFICATIONBYCERTNUM = "getCertificationByCertNum";

    public static final String FUNC_GETCERTIFICATIONBYID = "getCertificationByID";

    public static final String FUNC_GETCREDIT = "getCredit";

    public static final String FUNC_GETISSUER = "getIssuer";

    public static final String FUNC_GETROLEADMIN = "getRoleAdmin";

    public static final String FUNC_GRANTROLE = "grantRole";

    public static final String FUNC_HASROLE = "hasRole";

    public static final String FUNC_ID = "id";

    public static final String FUNC_INITIALIZE = "initialize";

    public static final String FUNC_ISSUERREGISTRATIONADDRESS = "issuerRegistrationAddress";

    public static final String FUNC_MAPBYCERTNUM = "mapByCertNum";

    public static final String FUNC_MAPBYID = "mapById";

    public static final String FUNC_OWNER = "owner";

    public static final String FUNC_PARENTHASH = "parentHash";

    public static final String FUNC_RENOUNCEOWNERSHIP = "renounceOwnership";

    public static final String FUNC_RENOUNCEROLE = "renounceRole";

    public static final String FUNC_REVOKE = "revoke";

    public static final String FUNC_REVOKEBYID = "revokeById";

    public static final String FUNC_REVOKEROLE = "revokeRole";

    public static final String FUNC_SETCREDITADDRESS = "setCreditAddress";

    public static final String FUNC_SETISSUERREGISTRATIONADDRESS = "setIssuerRegistrationAddress";

    public static final String FUNC_SUPPORTSINTERFACE = "supportsInterface";

    public static final String FUNC_TRANSFEROWNERSHIP = "transferOwnership";

    public static final Event CREDITADDRESSCHANGED_EVENT = new Event("CreditAddressChanged", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event ISSUED_EVENT = new Event("Issued", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event ISSUERREGISTRATIONADDRESSCHANGED_EVENT = new Event("IssuerRegistrationAddressChanged", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event OWNERSHIPTRANSFERRED_EVENT = new Event("OwnershipTransferred", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event REVOKED_EVENT = new Event("Revoked", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}));
    ;

    public static final Event ROLEADMINCHANGED_EVENT = new Event("RoleAdminChanged", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>(true) {}, new TypeReference<Bytes32>(true) {}));
    ;

    public static final Event ROLEGRANTED_EVENT = new Event("RoleGranted", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event ROLEREVOKED_EVENT = new Event("RoleRevoked", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>(true) {}, new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    @Deprecated
    protected CertificationRegistrationWithRole(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected CertificationRegistrationWithRole(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected CertificationRegistrationWithRole(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected CertificationRegistrationWithRole(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<byte[]> DEFAULT_ADMIN_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_DEFAULT_ADMIN_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<byte[]> ISSUER_ROLE() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISSUER_ROLE, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<TransactionReceipt> addCertification(String _hash, List<String> childHashes, String _certNum, BigInteger _expireDate, String _version, String _desc) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_addCertification, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_hash), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
                        org.web3j.abi.datatypes.Utf8String.class,
                        org.web3j.abi.Utils.typeMap(childHashes, org.web3j.abi.datatypes.Utf8String.class)), 
                new org.web3j.abi.datatypes.Utf8String(_certNum), 
                new org.web3j.abi.datatypes.generated.Uint256(_expireDate), 
                new org.web3j.abi.datatypes.Utf8String(_version), 
                new org.web3j.abi.datatypes.Utf8String(_desc)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addCertification(String _hash, String _certNum, BigInteger _expireDate, String _version, String _desc) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_addCertification, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_hash), 
                new org.web3j.abi.datatypes.Utf8String(_certNum), 
                new org.web3j.abi.datatypes.generated.Uint256(_expireDate), 
                new org.web3j.abi.datatypes.Utf8String(_version), 
                new org.web3j.abi.datatypes.Utf8String(_desc)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> addTransactionId(String _hash, String _txid) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_ADDTRANSACTIONID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_hash), 
                new org.web3j.abi.datatypes.Utf8String(_txid)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Tuple12<BigInteger, String, String, String, BigInteger, BigInteger, Boolean, String, String, String, BigInteger, String>> certifications(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_CERTIFICATIONS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Bool>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteFunctionCall<Tuple12<BigInteger, String, String, String, BigInteger, BigInteger, Boolean, String, String, String, BigInteger, String>>(function,
                new Callable<Tuple12<BigInteger, String, String, String, BigInteger, BigInteger, Boolean, String, String, String, BigInteger, String>>() {
                    @Override
                    public Tuple12<BigInteger, String, String, String, BigInteger, BigInteger, Boolean, String, String, String, BigInteger, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple12<BigInteger, String, String, String, BigInteger, BigInteger, Boolean, String, String, String, BigInteger, String>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue(), 
                                (Boolean) results.get(6).getValue(), 
                                (String) results.get(7).getValue(), 
                                (String) results.get(8).getValue(), 
                                (String) results.get(9).getValue(), 
                                (BigInteger) results.get(10).getValue(), 
                                (String) results.get(11).getValue());
                    }
                });
    }

    public RemoteFunctionCall<TransactionReceipt> chargeCredit(String addr, BigInteger credit, BigInteger weiValue) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_CHARGECREDIT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, addr), 
                new org.web3j.abi.datatypes.generated.Uint256(credit)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function, weiValue);
    }

    public RemoteFunctionCall<String> creditAddress() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_CREDITADDRESS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Certification> getCertification(String hash) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETCERTIFICATION, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(hash)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Certification>() {}));
        return executeRemoteCallSingleValueReturn(function, Certification.class);
    }

    public RemoteFunctionCall<Certification> getCertificationByCertNum(String certNum) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETCERTIFICATIONBYCERTNUM, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(certNum)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Certification>() {}));
        return executeRemoteCallSingleValueReturn(function, Certification.class);
    }

    public RemoteFunctionCall<Certification> getCertificationByID(BigInteger ID) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETCERTIFICATIONBYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(ID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Certification>() {}));
        return executeRemoteCallSingleValueReturn(function, Certification.class);
    }

    public RemoteFunctionCall<BigInteger> getCredit(String addr) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETCREDIT, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<Issuer> getIssuer(String issuer) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETISSUER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, issuer)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Issuer>() {}));
        return executeRemoteCallSingleValueReturn(function, Issuer.class);
    }

    public RemoteFunctionCall<byte[]> getRoleAdmin(byte[] role) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETROLEADMIN, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bytes32>() {}));
        return executeRemoteCallSingleValueReturn(function, byte[].class);
    }

    public RemoteFunctionCall<TransactionReceipt> grantRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_GRANTROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> hasRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_HASROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<BigInteger> id() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ID, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteFunctionCall<TransactionReceipt> initialize(String _creditAddress, String _issuerRegistrationAddress) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_INITIALIZE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _creditAddress), 
                new org.web3j.abi.datatypes.Address(160, _issuerRegistrationAddress)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> issuerRegistrationAddress() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISSUERREGISTRATIONADDRESS, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<Tuple12<BigInteger, String, String, String, BigInteger, BigInteger, Boolean, String, String, String, BigInteger, String>> mapByCertNum(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_MAPBYCERTNUM, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Bool>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteFunctionCall<Tuple12<BigInteger, String, String, String, BigInteger, BigInteger, Boolean, String, String, String, BigInteger, String>>(function,
                new Callable<Tuple12<BigInteger, String, String, String, BigInteger, BigInteger, Boolean, String, String, String, BigInteger, String>>() {
                    @Override
                    public Tuple12<BigInteger, String, String, String, BigInteger, BigInteger, Boolean, String, String, String, BigInteger, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple12<BigInteger, String, String, String, BigInteger, BigInteger, Boolean, String, String, String, BigInteger, String>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue(), 
                                (Boolean) results.get(6).getValue(), 
                                (String) results.get(7).getValue(), 
                                (String) results.get(8).getValue(), 
                                (String) results.get(9).getValue(), 
                                (BigInteger) results.get(10).getValue(), 
                                (String) results.get(11).getValue());
                    }
                });
    }

    public RemoteFunctionCall<Tuple12<BigInteger, String, String, String, BigInteger, BigInteger, Boolean, String, String, String, BigInteger, String>> mapById(BigInteger param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_MAPBYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Address>() {}, new TypeReference<Uint256>() {}, new TypeReference<Uint256>() {}, new TypeReference<Bool>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}));
        return new RemoteFunctionCall<Tuple12<BigInteger, String, String, String, BigInteger, BigInteger, Boolean, String, String, String, BigInteger, String>>(function,
                new Callable<Tuple12<BigInteger, String, String, String, BigInteger, BigInteger, Boolean, String, String, String, BigInteger, String>>() {
                    @Override
                    public Tuple12<BigInteger, String, String, String, BigInteger, BigInteger, Boolean, String, String, String, BigInteger, String> call() throws Exception {
                        List<Type> results = executeCallMultipleValueReturn(function);
                        return new Tuple12<BigInteger, String, String, String, BigInteger, BigInteger, Boolean, String, String, String, BigInteger, String>(
                                (BigInteger) results.get(0).getValue(), 
                                (String) results.get(1).getValue(), 
                                (String) results.get(2).getValue(), 
                                (String) results.get(3).getValue(), 
                                (BigInteger) results.get(4).getValue(), 
                                (BigInteger) results.get(5).getValue(), 
                                (Boolean) results.get(6).getValue(), 
                                (String) results.get(7).getValue(), 
                                (String) results.get(8).getValue(), 
                                (String) results.get(9).getValue(), 
                                (BigInteger) results.get(10).getValue(), 
                                (String) results.get(11).getValue());
                    }
                });
    }

    public RemoteFunctionCall<String> owner() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> parentHash(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_PARENTHASH, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> renounceOwnership() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEOWNERSHIP, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> renounceRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> revoke(String hash, String revokerName) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REVOKE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(hash), 
                new org.web3j.abi.datatypes.Utf8String(revokerName)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> revokeById(BigInteger ID, String revokerName) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REVOKEBYID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(ID), 
                new org.web3j.abi.datatypes.Utf8String(revokerName)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> revokeRole(byte[] role, String account) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REVOKEROLE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes32(role), 
                new org.web3j.abi.datatypes.Address(160, account)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setCreditAddress(String _creditAddress) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETCREDITADDRESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _creditAddress)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setIssuerRegistrationAddress(String _issuerRegistrationAddress) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETISSUERREGISTRATIONADDRESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _issuerRegistrationAddress)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<Boolean> supportsInterface(byte[] interfaceId) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_SUPPORTSINTERFACE, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Bytes4(interfaceId)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<TransactionReceipt> transferOwnership(String newOwner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFEROWNERSHIP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, newOwner)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static CertificationRegistrationWithRole load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new CertificationRegistrationWithRole(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static CertificationRegistrationWithRole load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new CertificationRegistrationWithRole(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static CertificationRegistrationWithRole load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new CertificationRegistrationWithRole(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static CertificationRegistrationWithRole load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new CertificationRegistrationWithRole(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<CertificationRegistrationWithRole> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(CertificationRegistrationWithRole.class, web3j, credentials, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<CertificationRegistrationWithRole> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(CertificationRegistrationWithRole.class, web3j, credentials, gasPrice, gasLimit, BINARY, "");
    }

    public static RemoteCall<CertificationRegistrationWithRole> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return deployRemoteCall(CertificationRegistrationWithRole.class, web3j, transactionManager, contractGasProvider, BINARY, "");
    }

    @Deprecated
    public static RemoteCall<CertificationRegistrationWithRole> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(CertificationRegistrationWithRole.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, "");
    }

    public static class Certification extends DynamicStruct {
        public BigInteger id;

        public String certNum;

        public String hash;

        public String issuer;

        public BigInteger expireDate;

        public BigInteger createdAt;

        public Boolean isRevoked;

        public String version;

        public String description;

        public String revokerName;

        public BigInteger revokedAt;

        public String txid;

        public Certification(BigInteger id, String certNum, String hash, String issuer, BigInteger expireDate, BigInteger createdAt, Boolean isRevoked, String version, String description, String revokerName, BigInteger revokedAt, String txid) {
            super(new org.web3j.abi.datatypes.generated.Uint256(id), 
                    new org.web3j.abi.datatypes.Utf8String(certNum), 
                    new org.web3j.abi.datatypes.Utf8String(hash), 
                    new org.web3j.abi.datatypes.Address(160, issuer), 
                    new org.web3j.abi.datatypes.generated.Uint256(expireDate), 
                    new org.web3j.abi.datatypes.generated.Uint256(createdAt), 
                    new org.web3j.abi.datatypes.Bool(isRevoked), 
                    new org.web3j.abi.datatypes.Utf8String(version), 
                    new org.web3j.abi.datatypes.Utf8String(description), 
                    new org.web3j.abi.datatypes.Utf8String(revokerName), 
                    new org.web3j.abi.datatypes.generated.Uint256(revokedAt), 
                    new org.web3j.abi.datatypes.Utf8String(txid));
            this.id = id;
            this.certNum = certNum;
            this.hash = hash;
            this.issuer = issuer;
            this.expireDate = expireDate;
            this.createdAt = createdAt;
            this.isRevoked = isRevoked;
            this.version = version;
            this.description = description;
            this.revokerName = revokerName;
            this.revokedAt = revokedAt;
            this.txid = txid;
        }

        public Certification(Uint256 id, Utf8String certNum, Utf8String hash, Address issuer, Uint256 expireDate, Uint256 createdAt, Bool isRevoked, Utf8String version, Utf8String description, Utf8String revokerName, Uint256 revokedAt, Utf8String txid) {
            super(id, certNum, hash, issuer, expireDate, createdAt, isRevoked, version, description, revokerName, revokedAt, txid);
            this.id = id.getValue();
            this.certNum = certNum.getValue();
            this.hash = hash.getValue();
            this.issuer = issuer.getValue();
            this.expireDate = expireDate.getValue();
            this.createdAt = createdAt.getValue();
            this.isRevoked = isRevoked.getValue();
            this.version = version.getValue();
            this.description = description.getValue();
            this.revokerName = revokerName.getValue();
            this.revokedAt = revokedAt.getValue();
            this.txid = txid.getValue();
        }
    }

    public static class Issuer extends DynamicStruct {
        public BigInteger id;

        public String name;

        public String regnum;

        public String description;

        public String category;

        public String addr;

        public String metaDataUrl;

        public Boolean isActive;

        public BigInteger createdAt;

        public BigInteger updatedAt;

        public Issuer(BigInteger id, String name, String regnum, String description, String category, String addr, String metaDataUrl, Boolean isActive, BigInteger createdAt, BigInteger updatedAt) {
            super(new org.web3j.abi.datatypes.generated.Uint256(id), 
                    new org.web3j.abi.datatypes.Utf8String(name), 
                    new org.web3j.abi.datatypes.Utf8String(regnum), 
                    new org.web3j.abi.datatypes.Utf8String(description), 
                    new org.web3j.abi.datatypes.Utf8String(category), 
                    new org.web3j.abi.datatypes.Address(160, addr), 
                    new org.web3j.abi.datatypes.Utf8String(metaDataUrl), 
                    new org.web3j.abi.datatypes.Bool(isActive), 
                    new org.web3j.abi.datatypes.generated.Uint256(createdAt), 
                    new org.web3j.abi.datatypes.generated.Uint256(updatedAt));
            this.id = id;
            this.name = name;
            this.regnum = regnum;
            this.description = description;
            this.category = category;
            this.addr = addr;
            this.metaDataUrl = metaDataUrl;
            this.isActive = isActive;
            this.createdAt = createdAt;
            this.updatedAt = updatedAt;
        }

        public Issuer(Uint256 id, Utf8String name, Utf8String regnum, Utf8String description, Utf8String category, Address addr, Utf8String metaDataUrl, Bool isActive, Uint256 createdAt, Uint256 updatedAt) {
            super(id, name, regnum, description, category, addr, metaDataUrl, isActive, createdAt, updatedAt);
            this.id = id.getValue();
            this.name = name.getValue();
            this.regnum = regnum.getValue();
            this.description = description.getValue();
            this.category = category.getValue();
            this.addr = addr.getValue();
            this.metaDataUrl = metaDataUrl.getValue();
            this.isActive = isActive.getValue();
            this.createdAt = createdAt.getValue();
            this.updatedAt = updatedAt.getValue();
        }
    }

    public static class CreditAddressChangedEventResponse extends BaseEventResponse {
        public String oldAddr;

        public String newAddr;

        public BigInteger timestamp;
    }

    public static class IssuedEventResponse extends BaseEventResponse {
        public String issuer;

        public String hash;

        public String certNum;

        public BigInteger timestamp;
    }

    public static class IssuerRegistrationAddressChangedEventResponse extends BaseEventResponse {
        public String oldAddr;

        public String newAddr;

        public BigInteger timestamp;
    }

    public static class OwnershipTransferredEventResponse extends BaseEventResponse {
        public String previousOwner;

        public String newOwner;
    }

    public static class RevokedEventResponse extends BaseEventResponse {
        public String revoker;

        public String hash;

        public String certNum;

        public BigInteger timestamp;
    }

    public static class RoleAdminChangedEventResponse extends BaseEventResponse {
        public byte[] role;

        public byte[] previousAdminRole;

        public byte[] newAdminRole;
    }

    public static class RoleGrantedEventResponse extends BaseEventResponse {
        public byte[] role;

        public String account;

        public String sender;
    }

    public static class RoleRevokedEventResponse extends BaseEventResponse {
        public byte[] role;

        public String account;

        public String sender;
    }
}
